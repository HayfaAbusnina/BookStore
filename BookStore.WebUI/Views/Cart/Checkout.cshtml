@model BookStore.Domain.Entities.ShippingDetail

@{
    ViewBag.Title = "BookStore: Checkout";
}

<h2>Checkout Now</h2>
<p>Please, enter your details, and we'll ship you books right away</p>
@using (Html.BeginForm())
{
    @Html.ValidationSummary();
    <h3>Ship to</h3>
    <div class="form-group">
        <label>Name:</label>
        @Html.TextBoxFor(x=>x.Name,new {@class="form-control" })
    </div>
    <h3>Address</h3>

    foreach (var property in ViewData.ModelMetadata.Properties)
    {
        if (property.PropertyName != "Name" && property.PropertyName != "GiftWrap")
        {
            <div class="form-group">
                <label>@(property.DisplayName?? property.PropertyName):</label>
                @Html.TextBox(property.PropertyName,null, new { @class = "form-control" })
            </div>
        }
    }

    @*<div class="form-group">
            <label>Line1:</label>
            @Html.TextBoxFor(x => x.Line1, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Line2:</label>
        @Html.TextBoxFor(x => x.Line2, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>City:</label>
        @Html.TextBoxFor(x => x.City, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>State:</label>
        @Html.TextBoxFor(x => x.State, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Country:</label>
        @Html.TextBoxFor(x => x.Country, new { @class = "form-control" })
    </div>*@

    <h3>Options</h3>
    <div class="checkbox">
        <label>
            @Html.EditorFor(x => x.GiftWrap)
            Gift Wrap these book(s)
        </label>
    </div>
    <div class="text-center">
        <input class="btn btn-primary" type="submit" value="Complete Order"/>
    </div>
}
